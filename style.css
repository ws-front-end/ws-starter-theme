/*!
Theme Name: WS Starter Theme gulp+webpack
Description:
Author: Web Systems OÃœ
Author URI: https://www.websystems.ee/
Version: 2.2
Text Domain: ws-starter-theme
*/@import url("https://fonts.googleapis.com/css?family=Roboto:100,300,500");*{box-sizing:border-box}::before,::after{box-sizing:inherit}html{line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:transparent}body{margin:0}main{display:block}p,table,blockquote,address,pre,iframe,form,figure,dl{margin:0}h1,h2,h3,h4,h5,h6{font-size:inherit;line-height:inherit;font-weight:inherit;margin:0}ul,ol{margin:0;padding:0;list-style:none}dt{font-weight:bold}dd{margin-left:0}hr{box-sizing:content-box;height:0;overflow:visible;border:0;border-top:1px solid;margin:0;clear:both}pre{font-family:monospace, monospace;font-size:inherit}address{font-style:inherit}a{background-color:transparent;text-decoration:none;color:inherit}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:inherit}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none;vertical-align:bottom}embed,object,iframe{border:0;vertical-align:bottom}button,input,optgroup,select,textarea{vertical-align:middle;color:inherit;font:inherit;border:0;background:transparent;padding:0;margin:0;outline:0}select{-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:0}button,input{overflow:visible}button,select{text-transform:none}button,[type='button'],[type='reset'],[type='submit']{cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}button[disabled],[type='button'][disabled],[type='reset'][disabled],[type='submit'][disabled]{cursor:default}button::-moz-focus-inner,[type='button']::-moz-focus-inner,[type='reset']::-moz-focus-inner,[type='submit']::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type='button']:-moz-focusring,[type='reset']:-moz-focusring,[type='submit']:-moz-focusring{outline:1px dotted ButtonText}fieldset{margin:0;padding:0;border:0;min-width:0}legend{color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type='checkbox'],[type='radio']{box-sizing:border-box;padding:0}[type='number']::-webkit-inner-spin-button,[type='number']::-webkit-outer-spin-button{height:auto}[type='search']{-webkit-appearance:textfield;outline-offset:-2px}[type='search']::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}::-webkit-input-placeholder{font:inherit}::-ms-input-placeholder{font:inherit}::-moz-placeholder{font:inherit}::placeholder{font:inherit}label[for]{cursor:pointer}details{display:block}summary{display:list-item}table{border-collapse:collapse;border-spacing:0}caption{text-align:left}td,th{vertical-align:top}th{text-align:left;font-weight:bold}template{display:none}[hidden]{display:none}html{box-sizing:border-box;font-size:0.625rem}.max--width{max-width:1920px;margin:0 auto}.overflow--disable{overflow:hidden}.touch--only{display:none}@font-face{font-family:"Roboto";font-weight:normal;font-style:normal}body{color:#202028;font-weight:300;font-family:"Roboto",sans-serif;line-height:1;font-size:2rem}strong,b{font-weight:500}h1,h2,h3,h4,h5,h6{font-family:"Roboto",sans-serif;font-weight:500;line-height:1}h1{font-size:5.5rem}h2{font-size:5rem}h3{font-size:4rem}h4{font-size:3.5rem}h5{font-size:3rem}h6{font-size:2.5rem}p,span,input,input::-webkit-input-placeholder,textarea{font-size:1.8rem;line-height:1}p,span,input,input::-moz-placeholder,textarea{font-size:1.8rem;line-height:1}p,span,input,input::-ms-input-placeholder,textarea{font-size:1.8rem;line-height:1}p,span,input,input::placeholder,textarea{font-size:1.8rem;line-height:1}a,button{font-size:1.8rem;line-height:1;color:#797981}a:hover{text-decoration:underline}.admin-bar{margin-top:-32px}.admin-bar .wp-bar{position:fixed;top:0;left:0;z-index:10}.admin-bar .wp-bar__icon{background:#23282d;padding:0.6rem;display:block;font:normal 20px/1 dashicons}.admin-bar .wp-bar__icon::before{content:'\f120';top:0;left:0;color:rgba(240,245,250,0.6)}.admin-bar .wp-bar:hover ~ #wpadminbar{-webkit-transform:translateY(0);transform:translateY(0);-webkit-transition:all 0.2s 0s ease-in-out;transition:all 0.2s 0s ease-in-out}.admin-bar #wpadminbar{-webkit-transform:translateY(-100%);transform:translateY(-100%);-webkit-transition:all 0.2s 1s ease-in-out;transition:all 0.2s 1s ease-in-out}.admin-bar #wpadminbar:hover{-webkit-transform:translateY(0);transform:translateY(0);-webkit-transition:all 0.2s 0s ease-in-out;transition:all 0.2s 0s ease-in-out}.ws-cookiebar-wrapper{background-color:#262629;opacity:0.9}.ws-cookiebar-wrapper p{color:#202028}.ws-cookiebar-accept-cookies{background-color:#797981}.ws-cookiebar-content p a{color:#202028;font-weight:400}.site-footer__ws-logo img{height:2rem;opacity:0.8;-webkit-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out}.site-footer__ws-logo img:hover{-webkit-transform:rotate(360deg);transform:rotate(360deg);opacity:1}article.page h1,article.page h2,article.page h3,article.page h4,article.page h5,article.page h6,article.post h1,article.post h2,article.post h3,article.post h4,article.post h5,article.post h6{margin:6rem 0 3rem 0}article.page p,article.post p{margin:1rem 0}article.page img,article.post img{width:100%;height:auto}article.page blockquote,article.post blockquote{padding-left:5rem;border-left:1.5rem solid #262629}article.page ul,article.page ol,article.post ul,article.post ol{list-style:disc;margin-top:1rem}article.page ul li,article.page ol li,article.post ul li,article.post ol li{margin-left:3rem}article.page .wp-block-cover,article.page .wp-block-cover-image,article.post .wp-block-cover,article.post .wp-block-cover-image{margin:1rem 0}@media screen and (max-width: 1200px){.desktop--only{display:none}.touch--only{display:block}}@media screen and (max-width: 700px){html{font-size:calc(0.3rem + 1vw)}}@media screen and (min-width: 700px) and (max-width: 1919px){html{font-size:calc(0.3rem + 0.28vw)}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
